{"version":3,"sources":["components/Header.jsx","components/ShowRating.jsx","components/Restaurant.jsx","components/ListRestaurant.jsx","components/Formulario.jsx","components/MapView.jsx","components/Spinner.jsx","components/RestaurantDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","ShowRating","rating","Restaurant","restaurant","name","id","href","contact","site","target","rel","email","phone","ListRestaurant","restaurants","map","key","Formulario","saveRestaurants","htmlFor","onChange","e","value","sort","a","b","charCodeAt","handleOrder","MapView","actualRestaurant","options","address","location","lat","lng","mapRestaurants","filter","Map","center","zoom","keyboard","touchZoom","dragging","TileLayer","attribution","url","Marker","opacity","position","Popup","Spinner","RestaurantDetail","useParams","length","nearRestaurants","averageRating","reduce","individualRatings","Math","pow","standardDeviation","sqrt","restaurantRecommended","street","city","state","toFixed","data-href","data-width","data-layout","data-action","data-size","data-share","index","App","useState","useEffect","Axios","result","data","getData","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7552b59.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <>\n      <header className=\"bg-alert\">\n        <Link to=\"/\">\n          <h1>Melp</h1>\n        </Link>\n      </header>\n      <h2 className=\"text-center mt-4\">Encuentra tu restaurante favorito</h2>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst ShowRating = ({ rating }) => {\n  switch (rating) {\n    case 0:\n      return (\n        <>\n          <i className=\"far fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n        </>\n      );\n    case 1:\n      return (\n        <>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n        </>\n      );\n    case 2:\n      return (\n        <>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n        </>\n      );\n    case 3:\n      return (\n        <>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"far fa-star\"></i>\n        </>\n      );\n    case 4:\n      return (\n        <>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"fas fa-star\"></i>\n          <i className=\"fas fa-star\"></i>\n        </>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default ShowRating;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ShowRating from \"./ShowRating\";\n\nconst Restaurant = ({ restaurant }) => {\n  return (\n    <>\n      <div className=\"card border-primary m-2\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{restaurant.name}</h4>\n          <p className=\"card-text\">\n            Rating:{\" \"}\n            <span>\n              <ShowRating rating={restaurant.rating}></ShowRating>\n            </span>\n          </p>\n          <Link to={`/restaurant/${restaurant.id}`} className=\"btn btn-primary\">\n            Ver mÃ¡s\n          </Link>\n        </div>\n        <div className=\"card-footer\">\n          <a\n            href={restaurant.contact.site}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-desktop\"></i>\n          </a>\n          <a\n            href={`mailto:${restaurant.contact.email}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-at\"></i>\n          </a>\n          <a\n            href={`tel:${restaurant.contact.phone}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-phone\"></i>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Restaurant;\n","import React from \"react\";\nimport Restaurant from \"./Restaurant\";\n\nconst ListRestaurant = ({ restaurants }) => {\n  return (\n    <div className=\"my-3 mx-5 row d-flex justify-content-center\">\n      {restaurants.map((restaurant) => (\n        <Restaurant key={restaurant.id} restaurant={restaurant} />\n      ))}\n    </div>\n  );\n};\n\nexport default ListRestaurant;\n","import React from \"react\";\n\nconst Formulario = ({ restaurants, saveRestaurants }) => {\n  const handleOrder = (e) => {\n    if (e.target.value === \"alpha\") {\n      saveRestaurants([\n        ...restaurants.sort(\n          (a, b) => a.name.charCodeAt() - b.name.charCodeAt()\n        ),\n      ]);\n    }\n    if (e.target.value === \"rating\") {\n      saveRestaurants([...restaurants.sort((a, b) => b.rating - a.rating)]);\n    }\n  };\n  return (\n    <form className=\"container d-flex justify-content-between mt-4\">\n      <label htmlFor=\"order\">Ordena alfabÃ©ticamente o por rating</label>\n      <select\n        onChange={(e) => handleOrder(e)}\n        className=\"form-control\"\n        id=\"order\"\n      >\n        <option value=\"\">-- Seleccione ---</option>\n        <option value=\"alpha\">AlfabÃ©ticamente</option>\n        <option value=\"rating\">Rating</option>\n      </select>\n    </form>\n  );\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nimport ShowRating from \"./ShowRating\";\n\nconst MapView = ({ actualRestaurant, restaurants }) => {\n  const options = [\n    actualRestaurant[0].address.location.lat,\n    actualRestaurant[0].address.location.lng,\n  ];\n  const mapRestaurants = restaurants.filter(\n    (restaurant) => restaurant.id !== actualRestaurant[0].id\n  );\n  return (\n    <Map\n      center={options}\n      zoom={20}\n      keyboard={false}\n      touchZoom=\"center\"\n      dragging={false}\n    >\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {mapRestaurants.map((restaurant) => (\n        <Marker\n          key={restaurant.id}\n          opacity={0.5}\n          position={[\n            restaurant.address.location.lat,\n            restaurant.address.location.lng,\n          ]}\n        >\n          <Popup>\n            {restaurant.name}\n            <br />\n            <ShowRating rating={restaurant.rating} />\n          </Popup>\n        </Marker>\n      ))}\n      <Marker position={options}>\n        <Popup>\n          {actualRestaurant[0].name}\n          <br />\n          <ShowRating rating={actualRestaurant[0].rating} />\n        </Popup>\n      </Marker>\n    </Map>\n  );\n};\n\nexport default MapView;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"spinner\"></div>;\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MapView from \"./MapView\";\nimport Restaurant from \"./Restaurant\";\n\nimport Spinner from \"./Spinner\";\n\nconst RestaurantDetail = ({ restaurants }) => {\n  const { id } = useParams();\n\n  const actualRestaurant = restaurants.filter(\n    (restaurant) => restaurant.id === id\n  );\n\n  if (actualRestaurant.length === 0) return <Spinner />;\n\n  const { lat, lng } = actualRestaurant[0].address.location;\n\n  const nearRestaurants = restaurants.filter(\n    (restaurant) =>\n      restaurant.address.location.lat > lat - 0.0015 &&\n      restaurant.address.location.lat < lat + 0.0015 &&\n      restaurant.address.location.lng > lng - 0.002 &&\n      restaurant.address.location.lng < lng + 0.002\n  );\n\n  const averageRating = nearRestaurants.reduce((a, b) => ({\n    rating: a.rating + b.rating,\n  }));\n\n  const individualRatings = nearRestaurants.map((restaurant) =>\n    Math.pow(\n      restaurant.rating - averageRating.rating / nearRestaurants.length,\n      2\n    )\n  );\n\n  const standardDeviation = Math.sqrt(\n    individualRatings.reduce((a, b) => a + b) / nearRestaurants.length\n  );\n\n  const restaurantRecommended = nearRestaurants.sort(\n    (a, b) => b.rating - a.rating\n  );\n\n  return (\n    <div className=\"container\">\n      <h2>{actualRestaurant[0].name}</h2>\n      <div className=\"resume-container\">\n        <p>\n          {actualRestaurant[0].address.street},{\" \"}\n          {actualRestaurant[0].address.city},{\" \"}\n          {actualRestaurant[0].address.state}.\n        </p>\n        <div>\n          <p>Restaurantes alrededor: {nearRestaurants.length}</p>\n          <p>\n            Promedio de rating:{\" \"}\n            {(averageRating.rating / nearRestaurants.length).toFixed(2)}\n          </p>\n          <p> D. E. de rating: {standardDeviation.toFixed(2)}</p>\n        </div>\n      </div>\n      <div\n        className=\"fb-like\"\n        data-href={actualRestaurant[0].contact.site}\n        data-width=\"500px\"\n        data-layout=\"standard\"\n        data-action=\"like\"\n        data-size=\"small\"\n        data-share=\"true\"\n      ></div>\n      <div className=\"my-4\">\n        <MapView\n          actualRestaurant={actualRestaurant}\n          restaurants={restaurants}\n        />\n      </div>\n      <div className=\"my-2\">\n        <h3>Restaurantes Recomendados en la Zona</h3>\n        <div className=\"restaurants-recommended\">\n          {restaurantRecommended.map((restaurant, index) => {\n            if (index > 2) return null;\n            return <Restaurant key={restaurant.id} restaurant={restaurant} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantDetail;\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport ListRestaurant from \"./components/ListRestaurant\";\nimport Formulario from \"./components/Formulario\";\nimport RestaurantDetail from \"./components/RestaurantDetail\";\n\nfunction App() {\n  const [restaurants, saveRestaurants] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const result = await Axios(\n        \"https://recruiting-datasets.s3.us-east-2.amazonaws.com/data_melp.json\"\n      );\n      saveRestaurants(result.data);\n    };\n    getData();\n  }, []);\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Formulario\n            restaurants={restaurants}\n            saveRestaurants={saveRestaurants}\n          />\n          <ListRestaurant restaurants={restaurants} />\n        </Route>\n        <Route exact path=\"/restaurant/:id\">\n          <RestaurantDetail restaurants={restaurants} />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}